from collections import defaultdict
import collections
class Graph:

    # Constructor
    def __init__(self):

        # default dictionary to store graph
        self.graph = defaultdict(list)

    # function to add an edge to graph
    def addEdge(self, u, v):
        self.graph[u].append(v)
        
         # Function to print a BFS of graph
    def BFS(self, s):

        # Mark all the vertices as not visited
        visited = [False] * (len(self.graph))

        # Create a queue for BFS
        queue = []

        queue.append(s)
        visited[s] = True
        
          while queue:
            s = queue.pop(0)
            print(s, end=" ")

            for i in self.graph[s]:
                if visited[i] == False:
                    queue.append(i)
                    visited[i] = True
                    
                     def BFS1(self, a):

        s1=1
        visited = [False] * (len(self.graph))
        queue.append(s1)
        visited[s1] = True

        while queue:
            t = 0
            s1 = queue.pop(0)

            if(s1==a):
              print(a,"  is  in the list")
              t=1
              break


         for i in self.graph[s1]:
                print(s1)
                if visited[i] == False:
                    queue.append(i)
                    visited[i] = True
        if(t==0):
          print(a, "  is not in the list")  
     g = Graph() 
g.addEdge(1, 48308)
g.addEdge(1, 48301)
g.addEdge(48308, 6996)
g.addEdge(6996, 16043)
g.addEdge(16043, 9981)
g.addEdge(16043, 71840)

g.addEdge(9981, 8150)
g.addEdge(71840, 8150)
g.addEdge(3, 8150)
g.addEdge(48311, 7005)
g.addEdge(48311, 51646)
g.addEdge(7005, 6996)

g.addEdge(2, 7005)
g.addEdge(51646, 51640)
g.addEdge(51640, 51641)
g.addEdge(51641, 51179)
g.addEdge(51179, 8150)

print("\nplease enter the node from where you want to start traversing:")
b=int(input())
print("\nFollowing is Breadth First Traversal"
      " (starting from vertex 2):")
g.BFS(b)

print("\nplease enter the node you want to search:")

a=int(input())

g.BFS1(a)

